import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import lagrange

x = np.array([-2., 0., 1., 2.], dtype=float)
f_x = np.array([30., -4., 3., 18.], dtype=float)
x_gotten = -1.5

def lagrange_interpolation(x, f_x, x_gotten):
    n = len(x)
    p = np.zeros(n)
    for i in range(n):
        p_i = 1
        for j in range(n):
            if i != j:
                p_i *= (x_gotten - x[j]) / (x[i] - x[j])
        p[i] = p_i
    return np.dot(f_x, p)

f_interp = lagrange_interpolation(x, f_x, x_gotten)

print("Значення функції у заданій точці =", f_interp.round(4))

#графік
xnew = np.linspace(np.min(x), np.max(x), 100)
ynew = [lagrange_interpolation(x, f_x, i) for i in xnew]
plt.plot(x, f_x, 'o', xnew, ynew)
plt.title('Lagrange Polynomial')
plt.grid(True)
plt.show()

#перевірка
f = lagrange(x, f_x)
fig = plt.figure(figsize = (7,5))
plt.plot(xnew, f(xnew), 'b', x, f_x, 'ro')
plt.title('Lagrange Polynomial_2')
plt.grid()
plt.xlabel('x')
plt.ylabel('f(x)')
plt.show()
